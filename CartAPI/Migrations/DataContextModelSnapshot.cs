// <auto-generated />
using System;
using CartAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CartAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CartAPI.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CupomId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CupomId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("CartAPI.Models.CartItens", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ItensCart");
                });

            modelBuilder.Entity("CartAPI.Models.Cupom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Desconto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Cupons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Codigo = "DESCONTAO",
                            Desconto = 10m
                        },
                        new
                        {
                            Id = 2,
                            Codigo = "CINQUENTAOFF",
                            Desconto = 50m
                        },
                        new
                        {
                            Id = 3,
                            Codigo = "FELIZNATAL",
                            Desconto = 25m
                        });
                });

            modelBuilder.Entity("CartAPI.Models.Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estoque")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Preco")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            Descricao = "Geladeira eletro 127v",
                            Estoque = 8,
                            Nome = "Geladeira",
                            Preco = 5050.0
                        },
                        new
                        {
                            Id = 2,
                            Ativo = true,
                            Descricao = "Fogão 5 Bocas",
                            Estoque = 3,
                            Nome = "Fogão",
                            Preco = 1200.0
                        },
                        new
                        {
                            Id = 3,
                            Ativo = true,
                            Descricao = "Sofá cama com suporte",
                            Estoque = 5,
                            Nome = "Sofá",
                            Preco = 1800.0
                        },
                        new
                        {
                            Id = 4,
                            Ativo = true,
                            Descricao = "Mesa de jantar com 4 lugares",
                            Estoque = 2,
                            Nome = "Mesa Jantar",
                            Preco = 780.0
                        },
                        new
                        {
                            Id = 5,
                            Ativo = true,
                            Descricao = "Guarda-roupas com 3 portas",
                            Estoque = 15,
                            Nome = "Guarda-Roupas",
                            Preco = 950.0
                        });
                });

            modelBuilder.Entity("CartAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CarrinhoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Mario"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Vanessa"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Victor"
                        });
                });

            modelBuilder.Entity("CartAPI.Models.Cart", b =>
                {
                    b.HasOne("CartAPI.Models.Cupom", "Cupom")
                        .WithMany()
                        .HasForeignKey("CupomId");

                    b.HasOne("CartAPI.Models.User", "Usuario")
                        .WithOne("Cart")
                        .HasForeignKey("CartAPI.Models.Cart", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cupom");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CartAPI.Models.CartItens", b =>
                {
                    b.HasOne("CartAPI.Models.Cart", null)
                        .WithMany("Itens")
                        .HasForeignKey("CartId");

                    b.HasOne("CartAPI.Models.Products", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("CartAPI.Models.Cart", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("CartAPI.Models.User", b =>
                {
                    b.Navigation("Cart");
                });
#pragma warning restore 612, 618
        }
    }
}
